#!/usr/bin/env python3

import asyncore
import socket
import argparse
import subprocess
import signal
import time
import sys


class RawIOClient(asyncore.dispatcher):
    def __init__(self, port):
        asyncore.dispatcher.__init__(self)
        self.create_socket(socket.AF_INET, socket.SOCK_STREAM)
        self.connect(("127.0.0.1", port))

    def handle_connect(self):
        pass

    def handle_close(self):
        self.close()

    def handle_read(self):
        sys.stdout.write(self.recv(8192).decode())



if __name__ == "__main__":
    parser = argparse.ArgumentParser(
        description='Run binary in FS-UAE.')
    parser.add_argument('binary', metavar='BINARY', type=str,
                        help='AmigaHunk executable file.')

    args = parser.parse_args()

    with open("s/startup-sequence", "w") as ss:
        print("echo " + args.binary, file=ss)
        print(args.binary, file=ss)
        print("ExitUAE", file=ss)

    uae = subprocess.Popen(["fs-uae"],
                           stdout=subprocess.PIPE,
                           stderr=subprocess.PIPE)
    try:
        time.sleep(1)
        serport = RawIOClient(8000)
        parport = RawIOClient(8001)
        asyncore.loop()
        uae.wait()
    except KeyboardInterrupt:
        uae.send_signal(signal.SIGINT)

